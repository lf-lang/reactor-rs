var searchIndex = JSON.parse('{\
"reactor_rt":{"doc":"The runtime library for reactor programs generated by LFC, …","t":[13,13,3,13,3,3,3,13,3,3,3,18,13,18,13,18,13,3,13,18,4,3,3,3,3,3,8,8,3,3,3,13,18,3,3,4,3,3,3,18,18,11,11,11,11,11,14,14,11,11,11,11,11,11,0,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,0,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,10,12,3,3,3,6,13,13,3,3,3,3,13,18,13,16,4,8,18,18,3,16,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,18,3,3,3,3,3,3,3,2,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,11,11,11,11,11,11,11],"n":["After","Asap","AsyncCtx","DAY","Duration","EventTag","GlobalReactionId","HOUR","Instant","LocalReactionId","LogicalAction","MAX","MICRO","MICROSECOND","MILLI","MILLISECOND","MIN","MicroStep","NANO","NANOSECOND","Offset","PhysicalAction","PhysicalActionRef","Port","PortBank","ReactionCtx","ReactionTrigger","ReactorBehavior","ReactorId","ReadablePort","ReadablePortBank","SEC","SECOND","SchedulerOptions","SyncScheduler","TimeUnit","Timer","WritablePort","WritablePortBank","ZERO","ZERO","add","add","add","add_assign","add_assign","after","after","as_micros","as_millis","as_nanos","as_secs","as_secs_f32","as_secs_f64","assembly","assert_tag_is","assert_tag_is","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add","checked_div","checked_duration_since","checked_mul","checked_sub","checked_sub","cleanup_tag","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","default","default","delay","delay","div","div_assign","div_duration_f32","div_duration_f64","div_f32","div_f64","dump_graph","duration_since","elapsed","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_micros","from_millis","from_nanos","from_secs","from_secs_f32","from_secs_f64","from_usize","from_usize","get","get","get_mut","get_mut","get_value","hash","hash","hash","hash","hash","hash","id","index","index","index","index","index","index_mut","index_mut","index_mut","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","is_present","is_present","is_zero","iter_mut","keep_alive","len","microstep","mul","mul_assign","mul_f32","mul_f64","ne","ne","ne","ne","ne","new","new","new","new","now","offset","offset_from_t0","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","period","prelude","raw","raw","react","run_main","saturating_add","saturating_duration_since","saturating_mul","saturating_sub","sub","sub","sub","sub_assign","sub_assign","subsec_micros","subsec_millis","subsec_nanos","sum","sum","tag","tag","threads","timeout","to_duration","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_secs_f32","try_from_secs_f64","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse_duration","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","use_value_ref","0","AssemblyCtx","AssemblyError","AssemblyIntermediate","AssemblyResult","ChildInputReference","ChildOutputReference","ComponentCreator","DependencyDeclarator","FinishedReactor","GlobalReactionId","Input","MAX_REACTION_ID","Output","Params","PortKind","ReactorInitializer","SHUTDOWN","STARTUP","TriggerId","Wrapped","assemble","assemble","assemble_self","bind_ports","bind_ports_iterated","bind_ports_zip","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","declare_triggers","declare_uses","effects_bank","effects_port","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_usize","get","get_mut","hash","hash","hash","index","index","index_mut","into","into","into","into","into","into","into","into","into","ne","ne","new","new_logical_action","new_physical_action","new_port","new_port_bank","new_timer","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_child","with_child_bank","AsyncCtx","Duration","EventTag","Instant","LogicalAction","ORIGIN","PhysicalActionRef","ReactionCtx","ReadablePort","ReadablePortBank","Timer","WritablePort","WritablePortBank","after","assert_tag_is","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","delay","duration_since_start","eq","equivalent","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get","get","get_elapsed_logical_time","get_elapsed_physical_time","get_logical_time","get_physical_time","get_start_time","get_tag","get_value","get_value","get_value","get_value","hash","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","is_empty","is_periodic","is_present","is_present","is_present","is_present","is_shutdown","len","len","microstep","microstep","ne","new","num_workers","offset","offset","offset_from_t0","partial_cmp","period","request_stop","request_stop","schedule","schedule_physical","schedule_physical_with_v","schedule_with_v","set","set_opt","spawn_physical_thread","tag","to_logical_time","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","use_ref","use_ref_opt","use_value_ref","use_value_ref","use_value_ref","use_value_ref","was_terminated"],"q":["reactor_rtreactor_rt::Offset","reactor_rt::assembly","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","reactor_rt::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Specify that the trigger will fire at least after the …","Specify that the trigger will fire as soon as possible. …","A type that can affect the logical event queue to implement","","A <code>Duration</code> type to represent a span of time, typically …","The tag of an event.","Global identifier for a reaction.","","A measurement of a monotonically nondecreasing clock. …","ID of a reaction local to its containing reactor.","A logical action.","The maximum duration.","","The duration of one microsecond.","","The duration of one millisecond.","","Type of the microsteps of an EventTag.","","The duration of one nanosecond.","An offset from the current event.","A physical action. Physical actions may only be used with …","A reference to a physical action. This thing is cloneable …","Represents a port, which carries values of type <code>T</code>. Ports …","Internal type, not communicated to reactions.","The context in which a reaction executes. Its API allows …","Common trait for actions, ports, and timer objects handed …","The trait used by the framework to interact with the …","The unique identifier of a reactor instance during …","A read-only reference to a port.","A read-only reference to a port bank.","","The duration of one second.","Construction parameters for the scheduler.","The runtime scheduler.","A unit of time, used in LF.","A timer is conceptually a logical action that may …","A write-only reference to a port.","","","A duration of zero time.","","Panics","","","","Shorthand for using After together with delay.","Shorthand for using After together with delay.","Returns the total number of whole microseconds contained …","Returns the total number of whole milliseconds contained …","Returns the total number of nanoseconds contained by this …","Returns the number of <em>whole</em> seconds contained by this …","Returns the number of seconds contained by this <code>Duration</code> …","Returns the number of seconds contained by this <code>Duration</code> …","Module containing the API to initialize a reactor program.","Convenient macro to assert equality of the current tag. …","Convenient macro to assert equality of the current tag. …","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …","Checked <code>Duration</code> division. Computes <code>self / other</code>, …","Returns the amount of time elapsed from another instant to …","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …","Acknowledge that the given tag is done executing and free …","","","","","","","","","","","","","","","","","","","","Creates a Duration value using the same syntax as in LF.","Creates a Duration value using the same syntax as in LF.","","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.","Divide <code>Duration</code> by <code>f32</code>.","Divide <code>Duration</code> by <code>f64</code>.","If true, dump the dependency graph to a file before …","Returns the amount of time elapsed from another instant to …","Returns the amount of time elapsed since this instant was …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of whole …","Creates a new <code>Duration</code> from the specified number of …","Creates a new <code>Duration</code> from the specified number of …","","","","","","","Copies the value out, if it is present. Whether a <em>value</em> is …","","","","","","","The unique ID of this reactor. This is given by the …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether the trigger is present, given that the …","Returns whether the trigger is present, given that the …","Returns true if this <code>Duration</code> spans no time.","","If true, we won’t shut down the scheduler as soon as the …","","The microstep of this tag.","","","Multiplies <code>Duration</code> by <code>f32</code>.","Multiplies <code>Duration</code> by <code>f64</code>.","","","","","","","","","Creates a new <code>Duration</code> from the specified number of whole …","Returns an instant corresponding to “now”.","Minimal duration after the start of the program after …","The time offset from the origin of the logical timeline. …","","","","","","Period between events emitted by this timer. A period of …","The prelude that is imported at the top of reactor files …","","","Execute a single user-written reaction. Dispatches on the …","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …","Returns the amount of time elapsed from another instant to …","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …","","Returns the amount of time elapsed from another instant to …","","","","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in whole …","Returns the fractional part of this <code>Duration</code>, in …","","","Convenient macro to create a tag. This is just a shorthand …","Convenient macro to create a tag. This is just a shorthand …","Max number of threads to use in the thread pool. If zero, …","Timeout of reactor execution. If provided, the reactor …","","","","","","","","","","","","","","","","","","","","This recognizes the same strings as LF","","","","The checked version of <code>from_secs_f32</code>.","The checked version of <code>from_secs_f64</code>.","","","","","","","","","","","","","Parse a duration from a string. This is used for CLI …","","","","","","","","","","","","","Execute an action using the current value of this trigger. …","","Helper struct to assemble reactors during initialization. …","An error occurring during initialization of the reactor …","Intermediate result of assembly.","","","","Creates the components of a reactor.","Declares dependencies between components and reactions.","Final result of the assembly of a reactor.","Global identifier for a reaction.","","Exclusive maximum value of the <code>local_rid</code> parameter of […","","Type of the construction parameters.","Kind of a port.","Wrapper around the user struct for safe dispatch.","","","The ID of a trigger component.","Type of the user struct, which contains state variables of …","Assemble this reactor. This initializes state variables, …","top level function","Innermost function.","Bind two ports together.","","Bind the ports of the upstream to those of the downstream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assembles a child reactor and makes it available in the …","Assembles a bank of children reactor and makes it …","A type that can affect the logical event queue to implement","A <code>Duration</code> type to represent a span of time, typically …","The tag of an event.","A measurement of a monotonically nondecreasing clock. …","A logical action.","The tag of the startup event.","A reference to a physical action. This thing is cloneable …","The context in which a reaction executes. Its API allows …","A read-only reference to a port.","A read-only reference to a port bank.","A timer is conceptually a logical action that may …","A write-only reference to a port.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the amount of time elapsed since the start of the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the ith component","Returns the ith component","Returns the current value of a port or action at this …","Returns the amount of logical time elapsed since the start …","Returns the amount of physical time elapsed since the …","Returns the current logical time.","Returns the current physical time.","Returns the start time of the execution of this program.","Returns the tag at which the reaction executes.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the bank is empty.","Returns true if the bank is empty.","Whether the timer should repeat itself. A period of zero …","","Returns true if the given action was triggered at the …","","","Returns whether this tag is the shutdown tag of the …","Returns the length of the bank","Returns the length of the bank","Returns the microstep of this tag.","The microstep of this tag.","","","Returns the number of active workers in the execution of a …","Create a new tag from its offset from t0 and a microstep. …","Minimal duration after the start of the program after …","The time offset from the origin of the logical timeline. …","","Period between events emitted by this timer. A period of …","Request that the application shutdown, possibly with a …","Request that the application shutdown, possibly with a …","Schedule an action to trigger at some point in the future. …","Schedule an action to run after its own implicit time delay","Schedule an action to run after its own implicit time delay","Schedule an action to trigger at some point in the future,","Sets the value of the given port.","Sets the value of the given port, if the given value is …","Spawn a new thread that can use a AsyncCtx to push …","","Returns the logical instant for this tag, using the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Alias for the unit type, so that it can be written without …","Executes the provided closure on the value of the port or …","Executes the provided closure on the value of the port, …","","","","","Returns true if the scheduler has been shutdown. When that…"],"i":[1,1,0,2,0,0,0,2,0,0,0,3,2,3,2,3,2,0,2,3,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,4,3,4,5,3,5,3,0,0,3,3,3,3,3,3,0,0,0,6,7,8,9,10,11,1,12,4,2,5,3,6,7,8,9,10,11,1,12,4,2,5,3,5,3,3,5,3,5,3,13,10,11,1,4,5,3,10,11,1,4,5,3,10,11,4,5,3,12,3,0,0,3,3,3,3,3,3,12,5,5,10,11,1,4,5,3,10,11,1,4,5,3,10,10,11,11,1,4,4,2,5,3,6,7,8,9,10,11,1,12,4,2,5,3,3,3,3,3,3,3,10,11,10,11,10,11,14,10,11,1,4,5,3,13,7,10,10,11,11,7,10,11,6,7,8,9,10,11,1,12,4,2,5,3,7,14,14,3,7,12,7,15,3,3,3,3,10,11,4,5,3,10,11,4,3,5,16,15,10,11,4,5,3,16,0,10,11,13,9,3,5,3,3,5,5,3,5,3,3,3,3,3,3,0,0,12,12,2,10,11,1,4,5,3,10,11,4,6,7,8,9,10,11,1,12,4,2,2,5,3,3,3,6,7,8,9,10,11,1,12,4,2,5,3,0,6,7,8,9,10,11,1,12,4,2,5,3,14,17,0,0,0,0,18,18,0,0,0,0,18,19,18,19,0,0,20,20,0,19,19,21,21,22,22,22,21,23,24,22,25,26,27,20,18,21,23,24,22,25,26,27,20,18,27,20,18,27,20,18,27,20,22,22,22,22,27,20,18,27,20,18,27,27,20,18,21,23,24,22,25,26,27,20,18,20,20,20,27,20,18,20,20,20,21,23,24,22,25,26,27,20,18,27,20,27,25,25,25,25,25,27,20,27,20,18,27,21,23,24,22,25,26,27,20,18,21,23,24,22,25,26,27,20,18,21,23,24,22,25,26,27,20,18,21,21,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,28,29,30,31,32,33,16,34,35,15,28,29,30,31,32,33,16,34,35,15,34,35,15,34,35,15,15,0,15,15,15,15,15,28,29,30,31,32,33,16,34,35,15,31,32,33,33,33,33,33,33,33,28,29,16,34,15,28,29,30,31,32,33,16,34,35,15,31,32,31,32,16,28,33,16,34,33,31,32,15,15,15,29,33,15,16,15,15,16,33,35,33,35,35,33,33,33,33,0,15,34,35,15,15,28,29,30,31,32,33,16,34,35,15,28,29,30,31,32,33,16,34,35,15,28,29,30,31,32,33,16,34,35,15,0,33,33,28,29,16,34,35],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",0]]],[[["duration",3]],["instant",3]],[[["duration",3]],["duration",3]],[[["",0],["duration",3]]],[[["",0],["duration",3]]],null,null,[[["",0]],["u128",0]],[[["",0]],["u128",0]],[[["",0]],["u128",0]],[[["",0]],["u64",0]],[[["",0]],["f32",0]],[[["",0]],["f64",0]],null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["duration",3]],["option",4,[["instant",3]]]],[[["duration",3]],["option",4,[["duration",3]]]],[[["u32",0]],["option",4,[["duration",3]]]],[[["",0],["instant",3]],["option",4,[["duration",3]]]],[[["u32",0]],["option",4,[["duration",3]]]],[[["",0],["duration",3]],["option",4,[["instant",3]]]],[[["duration",3]],["option",4,[["duration",3]]]],[[["",0],["cleanupctx",3]]],[[["",0]],["localreactionid",3]],[[["",0]],["reactorid",3]],[[["",0]],["offset",4]],[[["",0]],["microstep",3]],[[["",0]],["instant",3]],[[["",0]],["duration",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["localreactionid",3]],["ordering",4]],[[["",0],["reactorid",3]],["ordering",4]],[[["",0],["microstep",3]],["ordering",4]],[[["",0],["instant",3]],["ordering",4]],[[["",0],["duration",3]],["ordering",4]],[[],["scheduleroptions",3]],[[],["duration",3]],null,null,[[["u32",0]],["duration",3]],[[["",0],["u32",0]]],[[["duration",3]],["f32",0]],[[["duration",3]],["f64",0]],[[["f32",0]],["duration",3]],[[["f64",0]],["duration",3]],null,[[["",0],["instant",3]],["duration",3]],[[["",0]],["duration",3]],[[["",0],["localreactionid",3]],["bool",0]],[[["",0],["reactorid",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["microstep",3]],["bool",0]],[[["",0],["instant",3]],["bool",0]],[[["",0],["duration",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["fmtresult",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["fmtresult",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["u64",0]],["duration",3]],[[["f32",0]],["duration",3]],[[["f64",0]],["duration",3]],[[["usize",0]]],[[["usize",0]]],[[["indexslice",3]],["option",4]],[[["indexslice",3]],["option",4]],[[["indexslice",3]],["option",4]],[[["indexslice",3]],["option",4]],[[["",0],["eventtag",3],["instant",3]],["option",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0]],["reactorid",3]],[[["",0],["usize",0]]],[[],["usize",0]],[[["indexslice",3]]],[[["indexslice",3]]],[[],["usize",0]],[[["",0],["usize",0]]],[[["indexslice",3]]],[[["indexslice",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0],["eventtag",3],["instant",3]],["bool",0]],[[["",0],["eventtag",3],["instant",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],null,[[["",0]],["usize",0]],null,[[["u32",0]],["duration",3]],[[["",0],["u32",0]]],[[["f32",0]],["duration",3]],[[["f64",0]],["duration",3]],[[["",0],["localreactionid",3]],["bool",0]],[[["",0],["reactorid",3]],["bool",0]],[[["",0],["microstep",3]],["bool",0]],[[["",0],["instant",3]],["bool",0]],[[["",0],["duration",3]],["bool",0]],[[["u16",0]]],[[["u16",0]]],[[["u32",0]]],[[["u64",0],["u32",0]],["duration",3]],[[],["instant",3]],null,null,[[["",0],["localreactionid",3]],["option",4,[["ordering",4]]]],[[["",0],["reactorid",3]],["option",4,[["ordering",4]]]],[[["",0],["microstep",3]],["option",4,[["ordering",4]]]],[[["",0],["instant",3]],["option",4,[["ordering",4]]]],[[["",0],["duration",3]],["option",4,[["ordering",4]]]],null,null,[[],["u16",0]],[[],["u16",0]],[[["",0],["reactionctx",3],["localreactionid",3]]],[[["scheduleroptions",3]]],[[["duration",3]],["duration",3]],[[["",0],["instant",3]],["duration",3]],[[["u32",0]],["duration",3]],[[["duration",3]],["duration",3]],[[["duration",3]],["instant",3]],[[["instant",3]],["duration",3]],[[["duration",3]],["duration",3]],[[["",0],["duration",3]]],[[["",0],["duration",3]]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[["",0]],["u32",0]],[[],["duration",3]],[[],["duration",3]],null,null,null,null,[[["",0],["u64",0]],["duration",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["f32",0]],["result",4,[["duration",3],["fromfloatsecserror",3]]]],[[["f64",0]],["result",4,[["duration",3],["fromfloatsecserror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4,[["duration",3],["string",3]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["eventtag",3],["instant",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["assemblyctx",3]],["assemblyresult",6,[["finishedreactor",3]]]],[[],["assemblyresult",6,[["finishedreactor",3]]]],[[["usize",0]],["assemblyresult",6,[["assemblyintermediate",3]]]],[[["",0],["port",3],["port",3]],["assemblyresult",6]],[[["",0]],["assemblyresult",6]],[[["",0]],["assemblyresult",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["globalreactionid",3]],[[["",0]],["triggerid",3]],[[["",0]],["portkind",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["globalreactionid",3]],["ordering",4]],[[["",0],["triggerid",3]],["ordering",4]],[[["",0],["triggerid",3],["globalreactionid",3]],["assemblyresult",6]],[[["",0],["globalreactionid",3],["triggerid",3]],["assemblyresult",6]],[[["",0],["globalreactionid",3],["portbank",3]],["assemblyresult",6]],[[["",0],["globalreactionid",3],["port",3]],["assemblyresult",6]],[[["",0],["globalreactionid",3]],["bool",0]],[[["",0],["triggerid",3]],["bool",0]],[[["",0],["portkind",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",0]]],[[["indexslice",3]],["option",4]],[[["indexslice",3]],["option",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["indexslice",3]]],[[],["usize",0]],[[["indexslice",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["globalreactionid",3]],["bool",0]],[[["",0],["triggerid",3]],["bool",0]],[[["reactorid",3],["localreactionid",3]]],[[["",0],["str",0],["option",4,[["duration",3]]]],["logicalaction",3,[["sync",8]]]],[[["",0],["str",0],["option",4,[["duration",3]]]],["physicalactionref",3,[["sync",8]]]],[[["",0],["str",0],["portkind",4]],["port",3,[["sync",8]]]],[[["",0],["str",0],["portkind",4],["usize",0]],["result",4,[["portbank",3,[["sync",8]]],["assemblyerror",3]]]],[[["",0],["str",0],["duration",3],["duration",3]],["timer",3]],[[["",0],["globalreactionid",3]],["option",4,[["ordering",4]]]],[[["",0],["triggerid",3]],["option",4,[["ordering",4]]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["str",0]],["assemblyresult",6,[["assemblyintermediate",3]]]],[[["str",0],["usize",0]],["assemblyresult",6,[["assemblyintermediate",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["physicalactionref",3]],[[["",0]],["asyncctx",3]],[[["",0]],["eventtag",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["eventtag",3]],["ordering",4]],null,[[["",0]],["duration",3]],[[["",0],["eventtag",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0],["usize",0]],["readableport",3]],[[["",0],["usize",0]],["writableport",3]],[[["",0]],["option",4,[["copy",8]]]],[[["",0]],["duration",3]],[[["",0]],["duration",3]],[[["",0]],["instant",3]],[[["",0]],["instant",3]],[[["",0]],["instant",3]],[[["",0]],["eventtag",3]],[[["",0],["eventtag",3],["instant",3]],["option",4]],[[["",0],["eventtag",3],["instant",3]],["option",4]],[[["",0],["eventtag",3],["instant",3]],["option",4]],[[["",0],["eventtag",3],["instant",3]],["option",4]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["eventtag",3],["instant",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["eventtag",3],["instant",3]],["bool",0]],[[["",0],["eventtag",3],["instant",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["microstep",3]],null,[[["",0],["eventtag",3]],["bool",0]],[[["port",3]]],[[["",0]],["usize",0]],[[["duration",3],["u32",0]]],null,null,[[["",0],["eventtag",3]],["option",4,[["ordering",4]]]],null,[[["",0],["offset",4]]],[[["",0],["offset",4]],["result",4,[["senderror",3]]]],[[["",0],["logicalaction",3],["offset",4]]],[[["",0],["physicalactionref",3],["offset",4]],["result",4,[["senderror",3,[["option",4,[["sync",8]]]]]]]],[[["",0],["physicalactionref",3],["option",4,[["sync",8]]],["offset",4]],["result",4,[["senderror",3,[["option",4,[["sync",8]]]]]]]],[[["",0],["logicalaction",3],["option",4,[["sync",8]]],["offset",4]]],[[["",0]]],[[["",0],["option",4]]],[[["",0]],["scopedjoinhandle",3]],null,[[["",0],["instant",3]],["instant",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[["",0]]],[[["",0]],["option",4]],[[["",0],["eventtag",3],["instant",3]]],[[["",0],["eventtag",3],["instant",3]]],[[["",0],["eventtag",3],["instant",3]]],[[["",0],["eventtag",3],["instant",3]]],[[["",0]],["bool",0]]],"p":[[4,"Offset"],[4,"TimeUnit"],[3,"Duration"],[3,"MicroStep"],[3,"Instant"],[3,"PhysicalAction"],[3,"PortBank"],[3,"Port"],[3,"SyncScheduler"],[3,"LocalReactionId"],[3,"ReactorId"],[3,"SchedulerOptions"],[8,"ReactorBehavior"],[8,"ReactionTrigger"],[3,"EventTag"],[3,"Timer"],[13,"After"],[4,"PortKind"],[8,"ReactorInitializer"],[3,"TriggerId"],[3,"AssemblyCtx"],[3,"DependencyDeclarator"],[3,"FinishedReactor"],[3,"AssemblyIntermediate"],[3,"ComponentCreator"],[3,"AssemblyError"],[3,"GlobalReactionId"],[3,"LogicalAction"],[3,"ReadablePort"],[3,"WritablePort"],[3,"ReadablePortBank"],[3,"WritablePortBank"],[3,"ReactionCtx"],[3,"PhysicalActionRef"],[3,"AsyncCtx"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};